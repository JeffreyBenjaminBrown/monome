These are pretty well ordered by dependency.
* TODO doSoundMessage
** should store voice parameter info
** should receive a Pitch (Int)
not a "Freq" (Float)
* TODO add tests
* TODO voices: improve representation
** TODO ? first
stFingers :: Map (X,Y) (VoiceId, PitchClass)
stVoices :: Map VoiceId (Synth BoopParams, Pitch)
** why
It will make decoupoling voices from keys possible.
  Which will allow me to solve the bug where keys become inactive
  due to sustain after spatial drift.
It will make creating voices on the fly easier.
  Which will allow using fewer voices, better synths.
** what there is now
*** code: see temp.hs
*** types
St = ...
  stVoices :: M.Map (X,Y) (Synth BoopParams)
  stFingers :: M.Map (X,Y) PitchClass -- should be pitch, not pitch class
  stLit :: LitPitches = Map PitchClass (Set LedBecause)
  stSustained :: S.Set ((X,Y), PitchClass) -- should just be a voice ID
** what there should be
type VoiceId = Int
data St = ...
  stVoices  :: Map VoiceId (Synth BoopParams).
  stFingers :: Map (X,Y) VoiceId
  stSustained :: S.Set VoiceID
** Vivid: voice creation, use and deletion
use "synth" to make a synth, "free" to free it:
  s <- synth boop
  set s (toI f :: I "amp")
  free s
* TODO sustained pitches should not disable keys after spatial drift
Currently, because each voice is identified with a key,
if that voice is sustained, that key cannot sound a new note,
even when it no longer represents the same pitch.
* TODO flash the anchor
* TODO sustain: two buttons, "add these" and "release all"
"add these" stays in effect until it is released.
"release all" works as soon as it's touched; holding on it does nothing.
* Montevideo - Monome Tidal Vivid
** Things to represent on the monome
synth param
rhythm
chord
melody
* TODO maybe
** sustain to middle of bottom, and duplicate at both top corners
 so that usually something can touch it
* features
** show sustained notes
** add to ongoing sustained group
** transpose ongoing notes
** save to chord bank from sustain
** sustained voices do not block keys
** sustain these and future
This is what most piano sustain pedals do.
** loop bank
** volume control for sustained notes
** timbre
** split keyboard
** reset buttons
*** silence all voices
*** redraw entire grid
*** restore shift to 1
to remove floating point error
* separate projects
** separate Vivid.Jbb from Vivid
 this will make starting the repl faster
** separate my own Vivid projects
*** namely these
Vivid (clone, for reference)
Vivid.Synths.Jbb
Vivid.Dispatch
Monome
*** use symlinks between them as needed
e.g. from Monome to Synths
